{"version":3,"sources":["Components/PokemonCard.js","App.js","index.js"],"names":["PokemonCard","pokemonName","pokemonType","pokemonImageUrl","pokemonHeight","pokemonWeight","useState","prevPokemonType","setPrevPokemonType","useEffect","theme","document","querySelector","classList","add","remove","capitalize","word","charAt","toUpperCase","slice","className","alt","src","height","width","Math","round","App","inputBoxValue","setInputBoxValue","setPokemonName","setPokemonType","setPokemonImageUrl","setPokemonHeight","setPokemonWeight","showCard","setShowCard","pokemonNotFound","setPokemonNotFound","setPokemonDetails","a","url","axios","get","res","data","console","log","status","forms","name","types","type","sprites","other","dream_world","front_default","weight","undefined","response","onClick","topHalf","circleLine","bottomHalf","inputPokemon","container","setTimeout","onSubmit","e","preventDefault","onChange","target","value","toLowerCase","placeholder","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd70947f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst PokemonCard = ({ pokemonName, pokemonType, pokemonImageUrl, pokemonHeight, pokemonWeight }) => {\r\n  const [prevPokemonType, setPrevPokemonType] = useState('a')\r\n\r\n  useEffect(() => {\r\n    const theme = document.querySelector('.card')\r\n    theme.classList.add(pokemonType)\r\n    theme.classList.remove(prevPokemonType)\r\n    setPrevPokemonType(pokemonType)\r\n  }, [pokemonType])\r\n\r\n  const capitalize = (word) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1)\r\n  }\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='image-container'>\r\n        <img alt='Image not available' src={pokemonImageUrl} height='200px' width='250' />\r\n      </div>\r\n      <div className='name' >{capitalize(pokemonName)}</div>\r\n      <div className='type'>{capitalize(pokemonType)}<span> type</span></div>\r\n      <div className='height'>{\"Height: \"}\r\n        {(Math.round(pokemonHeight * 10) >= 100) ? Math.round(pokemonHeight * 0.1) + \" m\" : Math.round(pokemonHeight * 10) + \" cm\"}\r\n      </div>\r\n      <div className='height'>{\"Weight: \"}\r\n        {((pokemonWeight / 10) < 1) ? Math.round(pokemonWeight * 100) + \" gm\" : Math.round(pokemonWeight / 10) + \" kg\"}\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default PokemonCard\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\n\nimport PokemonCard from './Components/PokemonCard';\n\nconst App = () => {\n  const [inputBoxValue, setInputBoxValue] = useState('')\n  const [pokemonName, setPokemonName] = useState('')\n  const [pokemonType, setPokemonType] = useState('')\n  const [pokemonImageUrl, setPokemonImageUrl] = useState('')\n  const [pokemonHeight, setPokemonHeight] = useState()\n  const [pokemonWeight, setPokemonWeight] = useState()\n  const [showCard, setShowCard] = useState()\n  const [pokemonNotFound, setPokemonNotFound] = useState(0)\n\n  const setPokemonDetails = async () => {\n    try {\n      const url = `https://pokeapi.co/api/v2/pokemon/${inputBoxValue}`\n      const res = await axios.get(url)\n      const data = res.data\n      console.log(res)\n      if (res.status === 404) {\n        console.log('not-found')\n      } else {\n        setPokemonName(res.data.forms[0].name)\n        setPokemonType(data.types[0].type.name)\n        setPokemonImageUrl(data.sprites.other.dream_world.front_default)\n        setPokemonHeight(data.height)\n        setPokemonWeight(data.weight)\n      }\n      setPokemonNotFound(0)\n    } catch (e) {\n      if (e.response === undefined) {\n        console.log('Your internet is off')\n      } else if (e.response.status === 404) {\n        setPokemonNotFound(1)\n      } else {\n        console.log(e);\n      }\n    }\n  }\n\n  useEffect(() => {\n    setShowCard(1)\n  }, [pokemonType])\n\n  const loadNext = () => {\n    const topHalf = document.querySelector('.top-half');\n    const circleLine = document.querySelector('.circle-line');\n    const bottomHalf = document.querySelector('.bottom-half');\n    const inputPokemon = document.querySelector('.input-pokemon');\n    const container = document.querySelector('.container');\n\n    topHalf.classList.add('open');\n    circleLine.classList.add('open');\n    bottomHalf.classList.add('open');\n    setTimeout(() => {\n      inputPokemon.classList.add('open');\n    }, 1000)\n    setTimeout(() => {\n      container.classList.add('open');\n    }, 1000)\n  }\n\n  const handleChange = (e) => {\n    setInputBoxValue(e.target.value.toLowerCase())\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setPokemonDetails()\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='container'>\n        <div className='bg-image'></div>\n        <div className='dark'></div>\n        <div className='top-half'>\n          <div className='red'></div>\n          <div className='circle-line'>\n            <div className='line'></div>\n            <div className='outermost-circle'>\n              <div className='intermediate-circle'>\n                <div className='innermost-circle'>\n                  <button className='start-button' onClick={loadNext}>START</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='bottom-half'></div>\n        <form className='input-form' onSubmit={handleSubmit}>\n          <label>\n            <input className='input-pokemon' type='text' onChange={handleChange} placeholder='Enter Pokemon Name' />\n          </label>\n        </form>\n        {\n          (pokemonNotFound === 1) ?\n            <div className='not-found-message'>Oops! We don't know such a Pokemon</div> :\n            (showCard === 1 && pokemonType.length !== 0) ?\n              <PokemonCard pokemonName={pokemonName} pokemonType={pokemonType} pokemonImageUrl={pokemonImageUrl} pokemonHeight={pokemonHeight} pokemonWeight={pokemonWeight} />\n              : <div></div>\n        }\n      </div>\n    </div >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}